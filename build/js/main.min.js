(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var _iosVhFix = require("./utils/ios-vh-fix");
var _slider = require("./modules/slider");
var _tabs = require("./modules/tabs");
var _dropdown = require("./modules/dropdown");
var _langSwitcher = require("./modules/lang-switcher");
var _showPassword = require("./modules/show-password");
var _readonlySwitch = require("./modules/readonly-switch");
var _utilsBtns = require("./modules/utils-btns");
var _textarea = require("./modules/textarea");
var _selectOther = require("./modules/select-other");
var _clientsList = require("./modules/clients-list");
var _clientsBtns = require("./modules/clients-btns");
var _modal = require("./modules/modal");
var _clientCard = require("./modules/client-card");
var _inputsValue = require("./modules/inputs-value");
var _mySwiper = require("./modules/my-swiper");
var _pickdate = require("./modules/pickdate");
var _admin = require("./modules/admin");
// TODO: delete

// END TODO

// import {setSessionStatus, initActionsBtns} from './modules/clients-btns';

// import {renderSchedule, markScheduleSlots, saveState} from './modules/schedule';

// ---------------------------------

window.addEventListener('DOMContentLoaded', function () {
  // Utils
  // ---------------------------------

  (0, _iosVhFix.iosVhFix)();

  // Modules
  // ---------------------------------

  window.addEventListener('load', function () {
    (0, _langSwitcher.setLangBtn)();
    (0, _slider.initSlider)();
    (0, _tabs.initTabs)();
    (0, _dropdown.showDropdownList)();
    (0, _showPassword.showPassword)();
    (0, _readonlySwitch.switchReadonly)();
    // TODO: delete
    (0, _utilsBtns.setUtilsBtns)();
    // END TODO
    (0, _textarea.validateTextarea)();
    (0, _selectOther.showTextInput)();
    (0, _clientsList.setActiveItem)();
    // setSessionStatus();
    (0, _clientsBtns.initActionsBtns)();
    (0, _modal.initModal)();
    (0, _clientCard.setClientCard)();
    (0, _inputsValue.setTimeValue)();
    // renderSchedule();
    // saveState();
    // markScheduleSlots();
    (0, _mySwiper.initSwiper)();
    (0, _pickdate.setChoiceBtn)();
    (0, _admin.showPopup)();
    (0, _admin.showClientProfile)();
  });
});

},{"./modules/admin":2,"./modules/client-card":3,"./modules/clients-btns":4,"./modules/clients-list":5,"./modules/dropdown":6,"./modules/inputs-value":7,"./modules/lang-switcher":8,"./modules/modal":9,"./modules/my-swiper":10,"./modules/pickdate":11,"./modules/readonly-switch":12,"./modules/select-other":13,"./modules/show-password":14,"./modules/slider":15,"./modules/tabs":16,"./modules/textarea":17,"./modules/utils-btns":18,"./utils/ios-vh-fix":20}],2:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.showClientProfile = showClientProfile;
exports.showPopup = showPopup;
var items = document.querySelectorAll('.admin-table__item');
function closeAll(arr) {
  arr.forEach(function (el) {
    if (el.classList.contains('is-active')) {
      el.classList.remove('is-active');
    }
  });
}
function showPopup() {
  if (!items) {
    return;
  }
  items.forEach(function (item) {
    item.addEventListener('click', function (e) {
      e.stopPropagation();
      closeAll(items);
      if (item.classList.contains('is-active')) {
        item.classList.remove('is-active');
      } else {
        closeAll(items);
        item.classList.add('is-active');
      }
    });
    document.addEventListener('click', function () {
      closeAll(items);
    });
  });
}
function showClientProfile() {
  if (!items) {
    return;
  }
  var buttons = document.querySelectorAll('.admin-table__popup-btn--edit');
  var mainContent = document.querySelector('.admin-content__main');
  var bottomBtns = document.querySelector('.admin-profile__buttons');
  var profile = document.querySelector('.admin__profile');
  var docSessions = document.querySelector('.admin-profile__sessions');
  var docPersonal = document.querySelector('.admin-profile__personal');
  var docInfo = document.querySelector('.admin-profile__doc-info');
  var backToProfileBtns = document.querySelectorAll('.admin-profile__back-to-profile');
  buttons.forEach(function (btn) {
    btn.addEventListener('click', function () {
      mainContent.classList.add('is-hidden');
      profile.classList.remove('is-hidden');
    });
  });
  if (document.querySelector('.admin-profile__back-btn')) {
    document.querySelector('.admin-profile__back-btn').addEventListener('click', function () {
      mainContent.classList.remove('is-hidden');
      profile.classList.add('is-hidden');
    });
  }
  if (document.querySelector('.all-sessions-button')) {
    document.querySelector('.all-sessions-button').addEventListener('click', function () {
      mainContent.classList.add('sessions-shown');
      bottomBtns.classList.add('sessions-shown');
      docSessions.classList.remove('is-hidden');
      docPersonal.classList.add('is-hidden');
      docInfo.classList.add('is-hidden');
    });
  }
  backToProfileBtns.forEach(function (btn) {
    btn.addEventListener('click', function () {
      mainContent.classList.remove('sessions-shown');
      bottomBtns.classList.remove('sessions-shown');
      docSessions.classList.add('is-hidden');
      docPersonal.classList.remove('is-hidden');
      docInfo.classList.remove('is-hidden');
    });
  });
}

},{}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setClientCard = setClientCard;
var userName = document.querySelectorAll('.clients__client-name');
var clientCard = document.querySelector('.client-card');
function setClientCard() {
  if (clientCard) {
    var cardName = clientCard.querySelector('.client-card__username');
    var cardId = clientCard.querySelector('.client-card__userid');
    var cardAge = clientCard.querySelector('.client-card__age');
    var cardAmount = clientCard.querySelector('.client-card__sessions-amount');
    var cardNextSession = clientCard.querySelector('.client-card__next-session');
    userName.forEach(function (user) {
      var currentItem = user.closest('.clients__item');
      var currentId = currentItem.querySelector('.clients__client-id');
      var currentAge = currentItem.querySelector('.clients__client-age');
      var currentAmount = currentItem.querySelector('.clients__sessions-amount');
      var currentNextSession = currentItem.querySelector('.clients__next-session');
      user.addEventListener('click', function () {
        cardName.textContent = user.textContent;
        cardId.textContent = currentId.textContent;
        cardAge.textContent = currentAge.textContent;
        cardAmount.textContent = currentAmount.textContent;
        cardNextSession.textContent = currentNextSession.textContent;
      });
    });
  }
}

},{}],4:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initActionsBtns = initActionsBtns;
// const clients = document.querySelector('.clients');
// const clientsItems = document.querySelectorAll('.clients__item');
// const actionsBtns = document.querySelectorAll('.clients__actions-btn');

// const status = {
//   scheduled: 'Запланирована',
//   notscheduled: 'Не записан',
//   requested: 'Запрос на сессию',
//   unapproved: 'Ожидание подтверждения',
// };

// const buttons = {
//   scheduled: 'Перенести',
//   notscheduled: 'Записать',
//   requested: 'Подтвердить',
//   unapproved: 'Перенести',
// };

// function setSessionStatus() {
//   if (clients) {
//     clientsItems.forEach((item) => {
//       const currentItem = item;
//       const currentStatus = currentItem.querySelector('.clients__session-status');
//       const currentBtn = currentItem.querySelector('.clients__actions-btn');
//       if (item.classList.contains('clients__item--scheduled')) {
//         currentStatus.textContent = status.scheduled;
//         currentBtn.textContent = buttons.scheduled;
//         currentBtn.setAttribute('data-action', 'reschedule');
//         currentBtn.setAttribute('data-open-modal', '');
//         currentBtn.setAttribute('data-modal-id', '#doctor-reschedule');
//       } else if (item.classList.contains('clients__item--not-scheduled')) {
//         currentStatus.textContent = status.notscheduled;
//         currentBtn.textContent = buttons.notscheduled;
//         currentBtn.setAttribute('data-action', 'schedule');
//       } else if (item.classList.contains('clients__item--requested')) {
//         currentStatus.textContent = status.requested;
//         currentBtn.textContent = buttons.requested;
//         currentBtn.setAttribute('data-action', 'confirm');
//       } else if (item.classList.contains('clients__item--unapproved')) {
//         currentStatus.textContent = status.unapproved;
//         currentBtn.textContent = buttons.unapproved;
//         currentBtn.setAttribute('data-action', '');
//       }
//     });
//   }
// }

// // TODO: переписать функцию, в данный момент она для демонстрации

// function initActionsBtns() {
//   if (clients) {
//     actionsBtns.forEach((btn) => {
//       const currentBtn = btn;
//       const currentParent = currentBtn.closest('.clients__item');
//       const className = 'clients__item';
//       const currentAction = currentBtn.getAttribute('data-action');
//       btn.addEventListener('click', function () {
//         if (currentAction === 'confirm' || currentAction === 'schedule') {
//           currentParent.className = className;
//           currentParent.classList.add('clients__item--scheduled');
//           currentBtn.removeAttribute('data-action', 'confirm');
//           currentBtn.setAttribute('data-action', 'reschedule');
//           currentParent.querySelector('.clients__session-status').textContent = status.scheduled;
//           currentParent.querySelector('.clients__actions-btn').textContent = buttons.scheduled;
//           currentBtn.setAttribute('data-open-modal', '');
//           currentBtn.setAttribute('data-modal-id', '#doctor-reschedule');
//         }
//       });
//     });
//   }
// }

// export {setSessionStatus, initActionsBtns};

var clients = document.querySelector('.clients');
function initActionsBtns() {
  if (!clients) {
    return;
  }
  var actionsBtns = document.querySelectorAll('.clients__session-status');
  actionsBtns.forEach(function (btn) {
    btn.addEventListener('click', function () {
      var currentActions = btn.closest('.clients__item').querySelector('.clients__actions');
      if (!currentActions.classList.contains('is-active')) {
        currentActions.classList.add('is-active');
      }
    });
  });
  var clientsCloseBtns = document.querySelectorAll('.clients__actions-close');
  clientsCloseBtns.forEach(function (btn) {
    btn.addEventListener('click', function () {
      btn.closest('.clients__actions').classList.remove('is-active');
    });
  });
}

},{}],5:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setActiveItem = setActiveItem;
var sessions = document.querySelector('.sessions ');
var clientItem = document.querySelectorAll('.sessions__clients-item');
var videochatClientName = document.querySelector('.videochat__client-name');
var videochatClientId = document.querySelector('.videochat__client-id');
var videochatDate = document.querySelector('.videochat__date');
var videochatButtons = document.querySelector('.videochat__buttons-wrapper');
function clearClasses() {
  clientItem.forEach(function (item) {
    item.classList.remove('is-active');
  });
}
function setActiveItem() {
  if (sessions) {
    clientItem[0].classList.add('is-active');
    videochatClientName.textContent = clientItem[0].querySelector('.sessions__client-name').textContent;
    videochatClientId.textContent = clientItem[0].querySelector('.sessions__client-id').textContent;
    videochatDate.textContent = clientItem[0].querySelector('.sessions__date').textContent;
    clientItem.forEach(function (item) {
      var currentItem = item;
      var currentClientName = currentItem.querySelector('.sessions__client-name');
      var currentClientId = currentItem.querySelector('.sessions__client-id');
      var currentDate = currentItem.querySelector('.sessions__date');
      item.addEventListener('click', function () {
        clearClasses();
        currentItem.classList.add('is-active');
        videochatClientName.textContent = currentClientName.textContent;
        videochatClientId.textContent = currentClientId.textContent;
        videochatDate.textContent = currentDate.textContent;
        if (item.closest('.sessions__clients-list').classList.contains('sessions__clients-list--unscheduled')) {
          videochatButtons.classList.add('unscheduled');
        } else {
          videochatButtons.classList.remove('unscheduled');
        }
      });
    });
  }
}

},{}],6:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.showDropdownList = showDropdownList;
var triggers = document.querySelectorAll('.js-dropdown-trigger');
function showDropdownList() {
  triggers.forEach(function (el) {
    var currentEl = el;
    var dataId = currentEl.getAttribute('data-id');
    var currentList = document.querySelector(dataId);
    el.addEventListener('click', function (e) {
      e.preventDefault();
      if (!currentList.classList.contains('is-active')) {
        currentList.classList.add('is-active');
        currentEl.classList.add('is-active');
      } else {
        currentList.classList.remove('is-active');
        currentEl.classList.remove('is-active');
      }
    });
    document.addEventListener('click', function (e) {
      if (currentList.classList.contains('is-active') && e.target !== el && !el.contains(e.target)) {
        currentList.classList.remove('is-active');
        currentEl.classList.remove('is-active');
      }
    });
    document.addEventListener('keydown', function (e) {
      if (e.key === 'Escape') {
        currentList.classList.remove('is-active');
        currentEl.classList.remove('is-active');
      }
    });
  });
}

},{}],7:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setTimeValue = setTimeValue;
var timeValues = document.querySelectorAll('.time-value');
function setTimeValue() {
  if (!timeValues) {
    return;
  }
  timeValues.forEach(function (el) {
    var currentWrapper = el.closest('.doctor__day-wrapper');
    var currentDay = currentWrapper.querySelector('.doctor__day');
    var currentDate = currentDay.querySelector('time');
    var currentLabel = el.closest('label');
    var currentInput = currentLabel.querySelector('input');
    currentInput.value = currentDate.getAttribute('datetime') + 'T' + el.textContent;
  });
}

},{}],8:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setLangBtn = setLangBtn;
var langSwitcherBtn = document.querySelector('.lang-switcher__btn > span');
var lang = document.documentElement.lang;
function setLangBtn() {
  switch (lang) {
    case 'ru':
      langSwitcherBtn.textContent = 'Русский';
      break;
    case 'en':
      langSwitcherBtn.textContent = 'English';
      break;
    case 'hu':
      langSwitcherBtn.textContent = 'Magyar';
      break;
    default:
      langSwitcherBtn.textContent = 'Русский';
  }
}

},{}],9:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initModal = initModal;
var modalOpenElements = document.querySelectorAll('[data-open-modal]');
var modalCloseElements = document.querySelectorAll('[data-close-modal]');
var modals = document.querySelectorAll('.modal');
var modalItems = document.querySelectorAll('.modal__item');
function prepareOpening() {
  modals.forEach(function (el) {
    setTimeout(function () {
      el.classList.remove('modal--preload');
    }, 100);
  });
}
function prepareClosing() {
  modals.forEach(function (el) {
    el.classList.remove('is-active');
  });
  modalItems.forEach(function (el) {
    el.classList.remove('is-active');
  });
}
function initModal() {
  prepareOpening();
  modalOpenElements.forEach(function (el) {
    var currentEl = el;
    var modalId = currentEl.getAttribute('data-modal-id');
    var currentModal = document.querySelector(modalId);
    var itemId = currentEl.getAttribute('data-item-id');
    var currentItem = document.querySelector(itemId);
    el.addEventListener('click', function (e) {
      e.preventDefault();
      currentModal.classList.add('is-active');
      if (currentItem) {
        currentItem.classList.add('is-active');
      }
    });
  });
  modalCloseElements.forEach(function (el) {
    el.addEventListener('click', function () {
      prepareClosing();
    });
  });
  document.addEventListener('keydown', function (e) {
    if (e.key === 'Escape') {
      prepareClosing();
    }
  });
}

},{}],10:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initSwiper = initSwiper;
var swiper = document.querySelector('#swiper-1');
function initSwiper() {
  if (!swiper) {
    return;
  }

  // eslint-disable-next-line
  new Swiper('#swiper-1', {
    navigation: {
      nextEl: '.swiper-btn--next',
      prevEl: '.swiper-btn--prev'
    },
    loop: false,
    slidesPerView: '8',
    spaceBetween: 47
  });
}

},{}],11:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setChoiceBtn = setChoiceBtn;
var choiceDateForm = document.querySelector('#choice-date-form');
var months = ['января', 'февраля', 'марта', 'aпреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'ноября', 'декабря'];
function setChoiceBtn() {
  if (!choiceDateForm) {
    return;
  }
  var slots = choiceDateForm.querySelectorAll('input[type="radio"]');
  var submitBtn = choiceDateForm.querySelector('button[type="submit"]');
  var dateTime = submitBtn.querySelector('.doctor__submit-date > time');
  var errorMsg = choiceDateForm.querySelector('.error-message');
  choiceDateForm.addEventListener('submit', function (e) {
    var checkedSlot = choiceDateForm.querySelectorAll('input[type="radio"]:checked');
    if (checkedSlot.length === 0) {
      e.preventDefault();
      errorMsg.classList.add('is-active');
    }
  });
  slots.forEach(function (slot) {
    slot.addEventListener('change', function () {
      errorMsg.classList.remove('is-active');
      submitBtn.disabled = false;
      submitBtn.classList.add('is-enabled');
      var currentDatetime = slot.value;
      var day = currentDatetime.slice(8, 10);
      var month = currentDatetime.slice(5, 7);
      var time = currentDatetime.slice(11);
      var monthNum = month[0] === '0' ? Number(month[1]) : Number(month);
      var dayText = day[0] === '0' ? day[1] : day;
      var monthText = months[monthNum - 1];
      dateTime.setAttribute('datetime', currentDatetime);
      dateTime.textContent = "".concat(dayText, " ").concat(monthText, " ").concat(time);
    });
  });
}

},{}],12:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.switchReadonly = switchReadonly;
var editBtns = document.querySelectorAll('.settings__edit-btn');
function toggleAttribute(inp, btn) {
  if (inp.hasAttribute('readonly')) {
    inp.removeAttribute('readonly');
    btn.textContent = 'Применить';
  } else {
    inp.setAttribute('readonly', '');
    btn.textContent = 'Редактировать';
  }
}
function switchReadonly() {
  if (editBtns) {
    editBtns.forEach(function (btn) {
      btn.addEventListener('click', function () {
        var currentInput = btn.closest('label').querySelector('input');
        toggleAttribute(currentInput, btn);
      });
    });
  }
}

},{}],13:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.showTextInput = showTextInput;
var selects = document.querySelectorAll('select');
var hiddenInput = document.querySelectorAll('.other-input');
function showTextInput() {
  if (hiddenInput) {
    selects.forEach(function (select) {
      var haveHiddenInput = select.nextElementSibling && select.nextElementSibling.classList.contains('other-input');
      select.addEventListener('change', function () {
        if (select.value === 'other' && haveHiddenInput) {
          select.nextElementSibling.classList.add('is-active');
        } else if (select.value !== 'other' && haveHiddenInput) {
          select.nextElementSibling.classList.remove('is-active');
        }
      });
    });
  }
}

},{}],14:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.showPassword = showPassword;
var showPswdBtn = document.querySelector('.show-password-btn');
var inputPswd = document.querySelector('input[type="password"]');
function togglePassword() {
  var inputType = inputPswd.getAttribute('type');
  if (inputType === 'password') {
    inputPswd.setAttribute('type', 'text');
    showPswdBtn.textContent = 'Скрыть пароль';
  } else {
    inputPswd.setAttribute('type', 'password');
    showPswdBtn.textContent = 'Показать пароль';
  }
}
function showPassword() {
  if (showPswdBtn) {
    showPswdBtn.addEventListener('click', function () {
      togglePassword();
    });
  }
}

},{}],15:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initSlider = initSlider;
var slider = document.querySelector('.slider');
var prev = document.querySelector('.btn-prev');
var next = document.querySelector('.btn-next');
var slides = document.querySelectorAll('.slide');
var dots = document.querySelectorAll('.dot');
var index = 0;
function initSlider() {
  if (slider) {
    var activeSlide = function activeSlide(n) {
      slides.forEach(function (slide) {
        slide.classList.remove('is-active');
      });
      slides[n].classList.add('is-active');
    };
    var activeDot = function activeDot(n) {
      dots.forEach(function (dot) {
        dot.classList.remove('is-active');
      });
      dots[n].classList.add('is-active');
    };
    var prepareCurrentSlide = function prepareCurrentSlide() {
      activeSlide(index);
      activeDot(index);
    };
    var nextSlide = function nextSlide() {
      if (index === slides.length - 1) {
        index = 0;
        prepareCurrentSlide(index);
      } else {
        index++;
        prepareCurrentSlide(index);
      }
    };
    var prevSlide = function prevSlide() {
      if (index === 0) {
        index = slides.length - 1;
        prepareCurrentSlide(index);
      } else {
        index--;
        prepareCurrentSlide(index);
      }
    };
    dots.forEach(function (item, indexDot) {
      item.addEventListener('click', function () {
        index = indexDot;
        prepareCurrentSlide(index);
      });
    });
    next.addEventListener('click', nextSlide);
    prev.addEventListener('click', prevSlide);

    // Автоматическое переключение слайдов

    setInterval(function () {
      return nextSlide();
    }, 3000);
  }
}

},{}],16:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initTabs = initTabs;
var tabs = document.querySelectorAll('.tabs');
var tabsBtn = document.querySelectorAll('[tab-btn]');
var tabsItems = document.querySelectorAll('[tab-item]');
function initTabs() {
  if (tabs) {
    tabsBtn.forEach(function (item) {
      item.addEventListener('click', function () {
        var currentBtn = item;
        var tabId = currentBtn.getAttribute('data-tab');
        var currentTab = document.querySelector(tabId);
        if (!currentBtn.classList.contains('is-active')) {
          tabsBtn.forEach(function (tabBtn) {
            tabBtn.classList.remove('is-active');
          });
          tabsItems.forEach(function (tabItem) {
            tabItem.classList.remove('is-active');
          });
          currentBtn.classList.add('is-active');
          currentTab.classList.add('is-active');
        }
      });
    });
  }
}

},{}],17:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.validateTextarea = validateTextarea;
var docForm = document.getElementById('doctor-settings-form');
var message = document.getElementById('doctor-about');
var count = document.getElementById('symbols-count');
var MAX = 2000;
function validateTextarea() {
  if (docForm) {
    docForm.addEventListener('input', function () {
      count.textContent = String(MAX - message.value.length);
    });
  }
}

},{}],18:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setUtilsBtns = setUtilsBtns;
var utilsBtnsMain = document.querySelectorAll('[utils-btn-main]');
var utilsBtnsSettings = document.querySelectorAll('[utils-btn-settings]');
var uaccMain = document.querySelector('.user-account__main');
var uaccSettings = document.querySelector('.user-account__settings');
var daccSettings = document.querySelector('.doctor-account__settings');
function setUtilsBtns() {
  if (utilsBtnsMain && uaccMain) {
    utilsBtnsMain.forEach(function (btn) {
      btn.addEventListener('click', function () {
        var currentBtn = btn;
        var btnId = currentBtn.getAttribute('data-id');
        uaccMain.setAttribute('data-utils', btnId);
      });
    });
  }
  if (utilsBtnsSettings && uaccSettings) {
    utilsBtnsSettings.forEach(function (btn) {
      btn.addEventListener('click', function () {
        var currentBtn = btn;
        var btnId = currentBtn.getAttribute('data-id');
        uaccSettings.setAttribute('data-utils', btnId);
      });
    });
  }
  if (utilsBtnsSettings && daccSettings) {
    utilsBtnsSettings.forEach(function (btn) {
      btn.addEventListener('click', function () {
        var currentBtn = btn;
        var btnId = currentBtn.getAttribute('data-id');
        daccSettings.setAttribute('data-utils', btnId);
      });
    });
  }
}

},{}],19:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.iosChecker = void 0;
var iosChecker = exports.iosChecker = function iosChecker() {
  return ['iPad Simulator', 'iPhone Simulator', 'iPod Simulator', 'iPad', 'iPhone', 'iPod'].includes(navigator.platform)
  // iPad on iOS 13 detection
  || navigator.userAgent.includes('Mac') && 'ontouchend' in document;
};

},{}],20:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.iosVhFix = void 0;
var _iosChecker = require("./ios-checker");
var iosVhFix = exports.iosVhFix = function iosVhFix() {
  if (!(!!window.MSInputMethodContext && !!document.documentMode)) {
    if ((0, _iosChecker.iosChecker)()) {
      var vh = window.innerHeight * 0.01;
      document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
      window.addEventListener('resize', function () {
        vh = window.innerHeight * 0.01;
        document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
      });
    }
  }
};

},{"./ios-checker":19}]},{},[1])


//# sourceMappingURL=main.min.js.map
